---
kind: pipeline
type: docker
name: code check

clone:
  depth: 50

environment:
  MACRO_COUNT: 0
  GENDER_COUNT: 6
  TO_WORLD_COUNT: 209

trigger:
  branch:
  - master #avoid double builds on PRs

steps:
  - name: "Runtime - Compile and Run Unit Tests"
    image: python:3.6-slim-buster
    commands:
      - pip install --user -r ./tools/requirements.txt
      - chmod +x ./scripts/code_check.sh && ./scripts/code_check.sh $PWD
      - awk -f tools/indentation.awk **/*.dm
      - python3 tools/TagMatcher/tag-matcher.py ../..
      - python3 tools/GenerateChangelog/ss13_genchangelog.py html/changelog.html html/changelogs --dry-run
      - python3 tools/mapmerge2/travis_mapcheck.py
      - echo "6a5ae087fe5bfa66e52e508655e57120 *html/changelogs/example.yml" | md5sum -c -
      - echo "Completed Code Checks"
  - name: "Run DreamChecker"
    image: aurorastation/dm-buildimage:latest
    commands:
      - /opt/dreamchecker
  - name: "Restore NPM Cache"
    image: appleboy/drone-sftp-cache
    settings:
      server:
        from_secret: sftp_server
      port:
        from_secret: sftp_port
      username:
        from_secret: sftp_user
      password:
        from_secret: sftp_pass
      path: /upload/nodecache
      mount:
        - vueui/node_modules
      restore: true
  - name: "Vue - Lint and Compile"
    image: node:10-buster
    commands:
      - cd vueui
      - npm install
      - (npm run lint | tee lint.log)
      - grep "No lint errors found!" lint.log
      - npm run build
  - name: "Rebuild NPM Cache"
    image: appleboy/drone-sftp-cache
    settings:
      server:
        from_secret: sftp_server
      port:
        from_secret: sftp_port
      username:
        from_secret: sftp_user
      password:
        from_secret: sftp_pass
      path: /upload/nodecache
      mount:
        - vueui/node_modules
      rebuild: true
---
kind: pipeline
type: docker
name: dm-runtime

clone:
  depth: 50

environment:
  USE_MAP: runtime

services:
  - name: mariadb
    image: mariadb:10.3
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: game
      MYSQL_USER: build
      MYSQL_PASSWORD: build

trigger:
  branch:
  - master #avoid double builds on PRs

steps:
  - name: "Migrate DB - Wing it without flyway"
    image: mariadb:10.3
    commands:
      - sleep 20
      - for f in SQL/migrate/*.sql; do mysql -h mariadb -uroot -proot game < $f && echo "Migrated $f"; done
      - mysql -h mariadb -uroot -proot game -e "SHOW TABLES;"

  - name: "Runtime - Compile and Run Unit Tests"
    image: aurorastation/dm-buildimage:latest
    commands:
      - export LD_LIBRARY_PATH=./:$PWD:$HOME/.byond/bin:/usr/local/lib:$LD_LIBRARY_PATH
      - cp config/example/* config/ && cp config/ut/config-db.txt config/config.txt && cp config/ut/dbconfig.txt config/dbconfig.txt
      - scripts/dm.sh -DUNIT_TEST -M$USE_MAP aurorastation.dme
      - grep "0 warnings" build_log.txt
      - DreamDaemon aurorastation.dmb -invisible -trusted -core 2>&1 | tee log.txt
      - grep "All Unit Tests Passed" log.txt
      - (! grep "runtime error:" log.txt)
      - echo "Unit Tests Completed"
---
kind: pipeline
type: docker
name: dm-aurora

node:
  k: y

clone:
  depth: 50

environment:
  USE_MAP: aurora

trigger:
  branch:
  - master #avoid double builds on PRs

steps:
  - name: "Aurora - Compile and Run Unit Tests"
    image: aurorastation/dm-buildimage:latest
    commands:
      - export LD_LIBRARY_PATH=./:$PWD:$HOME/.byond/bin:/usr/local/lib:$LD_LIBRARY_PATH
      - cp config/example/* config/ && cp config/ut/config-nodb.txt config/config.txt
      - scripts/dm.sh -DUNIT_TEST -M$USE_MAP aurorastation.dme
      - grep "0 warnings" build_log.txt
      - DreamDaemon aurorastation.dmb -invisible -trusted -core 2>&1 | tee log.txt
      - grep "All Unit Tests Passed" log.txt
      - (! grep "runtime error:" log.txt)
      - echo "Unit Tests Completed"
---
kind: signature
hmac: aa5f81d300bb1f01656d04254a788970d593b10792ac97b91161ec95ce622b1a

...
