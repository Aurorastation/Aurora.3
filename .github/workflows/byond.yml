name: CI Suite

on:
  merge_group:
    branches:
    - master
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  MACRO_COUNT: 0
  GENDER_COUNT: 6
  TO_WORLD_COUNT: 185
  TGM_CHECK: "//MAP CONVERTED BY dmm2tgm.py THIS HEADER COMMENT PREVENTS RECONVERSION, DO NOT REMOVE"

jobs:
  lint:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-22.04
    name: Run Linters
    concurrency:
      group: run_linters-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    steps:
      # Clone Repo
      - uses: actions/checkout@v3
      # Restore Caches
      - name: Restore SpacemanDMM cache
        uses: actions/cache@v3
        with:
          path: ~/SpacemanDMM
          key: ${{ runner.os }}-spacemandmm
      - name: Restore OpenDream cache
        uses: actions/cache@v3
        with:
          path: ~/OpenDream
          key: ${{ runner.os }}-opendream
      - name: Restore Yarn cache
        uses: actions/cache@v3
        with:
          path: tgui/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('tgui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install Dependencies
      - name: Install Tools
        run: |
          pip3 install setuptools
          bash tools/ci/install_node.sh
          bash tools/ci/install_spaceman_dmm.sh dreamchecker
          bash tools/ci/install_od.sh
          tools/bootstrap/python -c ''
      - name: Check Filedirs
        run: |
          bash tools/ci/check_filedirs.sh aurorastation.dme
      - name: Check ChangeLogs
        run: |
          bash tools/ci/check_changelogs.sh
      - name: Check Greps
        run: |
          bash tools/ci/check_grep.sh $PWD
      - name: Check Validate DME
        run: |
          tools/bootstrap/python tools/validate_dme.py <aurorastation.dme
      - name: Check Tgui
        run: |
          tools/build/build --ci lint tgui-test
      - name: Check Defines
        run: |
          tools/bootstrap/python -m define_sanity.check
      - name: Check Icons
        run: |
          tools/bootstrap/python -m dmi.test
      - name: Check DMM-Test
        run: |
          tools/bootstrap/python -m mapmerge2.dmm_test
      - name: Check Indentation
        run: |
          awk -f tools/indentation.awk **/*.dm
      - name: Run OpenDream
        run: |
          tools/ci/run_od.sh
      - name: Run Dreamchecker
        run: |
          ~/dreamchecker > ${GITHUB_WORKSPACE}/output-annotations.txt 2>&1
#  bash tools/ci/check_misc.sh
#  tools/bootstrap/python -m tools.maplint.source --github
      - name: Annotate Lints
        uses: yogstation13/DreamAnnotate@v2
        if: success() || failure()
        with:
          outputFile: output-annotations.txt

  unit-test-linux:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        map: [runtime, aurora, sccv_horizon, away_sites_testing, exoplanet_testing]
      fail-fast: false
    runs-on: ubuntu-22.04
    concurrency:
      group: unit-test-linux-${{ github.head_ref || github.run_id }}-${{ matrix.map }}
      cancel-in-progress: true
    needs: lint
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: build
          MYSQL_PASSWORD: build
          MYSQL_DATABASE: game
          MYSQL_ROOT_PASSWORD: root
    steps:
      - uses: actions/checkout@v3
      - name: Restore BYOND cache
        uses: actions/cache@v3
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond

      - name: Restore FlyWay cache
        uses: actions/cache@v3
        with:
          path: ~/flyway
          key: ${{ runner.os }}-flyway
      - name: Install BYOND
        run: |
          source dependencies.sh
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y gcc-multilib zlib1g-dev:i386 libssl-dev:i386 libgcc-s1:i386 libc6:i386
          bash tools/ci/install_byond.sh
          source $HOME/BYOND/byond/bin/byondsetup
          bash tools/ci/install_rust_g.sh
      - name: Install Flyway
        run: |
          source dependencies.sh
          tools/ci/install_flyway.sh
      - name: Migrate database
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          source dependencies.sh
          $HOME/flyway/flyway-$FLYWAY_BUILD/flyway migrate -user=root -password=root -url="jdbc:mariadb://localhost:$PORT/game"
      - name: Build
        run: |
          export LD_LIBRARY_PATH=./:$PWD:$HOME/BYOND/byond/bin:/usr/local/lib:$LD_LIBRARY_PATH
          scripts/dm.sh -DUNIT_TEST -M${{ matrix.map }} aurorastation.dme
          grep "0 warnings" build_log.txt
      - name: Run tests
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          export LD_LIBRARY_PATH=./:$PWD:$HOME/BYOND/byond/bin:/usr/local/lib:$LD_LIBRARY_PATH
          cp config/example/* config/ && cp config/ut/config-db.txt config/config.txt && cp config/ut/dbconfig.txt config/dbconfig.txt
          echo "PORT $PORT" >> config/dbconfig.txt
          $HOME/BYOND/byond/bin/DreamDaemon aurorastation.dmb -invisible -trusted -core 2>&1 | tee log.txt
          grep "All Unit Tests Passed" log.txt
          (! grep "runtime error:" log.txt)
