{
	// Place your Aurora.3 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  //
  // Refer to https://code.visualstudio.com/docs/editor/userdefinedsnippets

  "SET_FLAG": {
	"prefix": ["SET_FLAG"],
	"body": ["${1:variable} = BITFLAG(${2:flag_position})"]
  },
  "HAS_FLAG": {
    "prefix": ["HAS_FLAG"],
	"description": "Checks that a flag is set",
    "body": ["(${1:variable} & ${2:flag})"]
  },
  "NOT_FLAG": {
    "prefix": ["NOT_FLAG"],
	"description": "Checks that a flag is NOT set",
    "body": ["!(${1:variable} & ${2:flag})"]
  },

  //Bits-related snippets
  "SET_BIT": {
    "prefix": ["SET_BIT"],
	"description": "Set bit at index BIT",
    "body": ["(${1:variable} |= BITFLAG(${2:index}))"]
  },
  "CLEAR_BIT": {
    "prefix": ["CLEAR_BIT"],
	"description": "Unset bit at index BIT",
    "body": ["(${1:variable}  &= ~BITFLAG(${2:index}))"]
  },
  "FLIP_BIT": {
    "prefix": ["FLIP_BIT"],
	"description": "Flip bit at index BIT",
    "body": ["(${1:variable}  ^= BITFLAG(${2:index}))"]
  },

}
